<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:web-services="http://www.springframework.org/schema/web-services"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd">
    <!--
        Configures the location of static resources such as css files.
        Requires Spring Framework 3.0 or higher.

    <mvc:resources mapping="/static/**" location="/static/"/>
    -->
    <!--
        Ensures that dispatcher servlet can be mapped to '/' and static resources
        are still served by the containers default servlet. Requires Spring Framework
        3.0 or higher.
  
    <mvc:default-servlet-handler/>
  -->  
    <!--
        Configures Spring Data JPA and sets the base package of my DAOs.
   
    <jpa:repositories base-package="net.petrikainulainen.spring.datajpa.repository"/>
     -->
     <web-services:annotation-driven/>
     <web-services:interceptors>
<!--        <bean id="validatingInterceptor"  class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor" -->
<!--             p:schema="/WEB-INF/subscription.xsd" -->
<!--             p:validateRequest="true" -->
<!--             p:validateResponse="true"/>      -->
	<bean id="loggingInterceptor"
		class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor" />

	<bean
		class="org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor">
		<property name="validationActions" value="Timestamp UsernameToken" />
		<property name="securementActions" value="Timestamp UsernameToken" />
		<property name="timestampPrecisionInMilliseconds" value="true" />
		<property name="securementUsername" value="mojo" />
		<property name="securementPassword" value="mojopass" />
		<property name="securementPasswordType" value="PasswordText" />
		<property name="securementUsernameTokenElements" value="Nonce Created" />
		<property name="validationCallbackHandler" ref="callbackHandler" />
	</bean>   
    
     </web-services:interceptors> 
      <!-- a simple callback handler to configure users and passwords with an in-memory Properties object. -->
 <bean id="callbackHandler" class="org.springframework.ws.soap.security.wss4j.callback.SimplePasswordValidationCallbackHandler">
     <property name="users">
         <props>
             <prop key="admin">secret</prop>
             <prop key="user">pass</prop>
         </props>
     </property>
 </bean>
	<web-services:dynamic-wsdl id="accountService"
		portTypeName="AccountServices" locationUri="/webservices/accountService/">
		<web-services:xsd location="/WEB-INF/schemas/AcountDetailServiceOperations.xsd" />
	</web-services:dynamic-wsdl>
	
		<web-services:dynamic-wsdl id="hotelService"
		portTypeName="HotelServices" locationUri="/webservices/hotelService/">
		<web-services:xsd location="/WEB-INF/schemas/HotelDetailServiceOperations.xsd" />
	</web-services:dynamic-wsdl>
</beans>